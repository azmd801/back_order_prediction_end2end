name: workflow

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'


permissions:
  id-token: write
  contents: read

jobs:

  Continuous-Deployment:
  
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      
      
      - name: Pull latest images
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPO }}
          IMAGE_TAG: latest
        run: |
         # docker pull $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
         
      # - name: Stop and remove  container if running
      #   run: |
      #    docker ps -q --filter "name=catdog" | grep -q . && docker stop catdog && docker rm -fv catdog
       
      - name: Run Docker Image to serve users
        run: |
         echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
         
         docker run -d -p 8080:8080  $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      # - name: Clean previous images and containers
      #   run: |
      #    docker system prune -f
